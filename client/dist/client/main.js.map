{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/post.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<div class=\"container text-center\">\n  <nav class=\"navbar navbar-expand-lg bg-light\">\n    <a class=\"navbar-text\" href=\"#\"> <i class=\"fa fa-home text-dark\"></i></a>\n    <a class=\"navbar-text\" href=\"home\"><i class=\"fa fa-comments\"></i></a>\n  </nav>\n  <div class=\"row content\">\n    <div class=\"col-sm-8 text-left\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n<footer class=\"container text-center\">\n  <p></p>\n  <p>Reddit Scrape - Goran Kirov 2021</p>\n  Podatki pridobljeni s portala\n  <a href=\"https://www.reddit.com/\">reddit.com</a>\n</footer>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  posts: Post[];\n  postHost = PostService.postHost;\n\n  constructor(\n    private postService: PostService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  getPosts(): void {\n    this.postService.getPosts().subscribe((posts) => (this.posts = posts));\n  }\n\n  ngOnInit(): void {\n    this.getPosts();\n  }\n}\n","<h2 class=\"display-5\">Objave</h2>\n<br />\n<!-- z ngfor ponovimo značko, glede na to, koliko elementov, se nahaja v polji -->\n<div\n  *ngFor=\"let post of posts\"\n  class=\"card bg-white text-primary mb-7\"\n  [routerLink]=\"['/', post._id]\"\n>\n  <a href=\"{{post.postLink }}\">{{ post.titleName }}</a>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Post } from './post';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  public static postHost = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {}\n\n  public getPosts(): Observable<Post[]> {\n    return this.http.get<Post[]>(PostService.postHost);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostComponent } from './post/post.component';\n\nconst routes: Routes = [\n  {path: 'home', component: PostComponent},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}